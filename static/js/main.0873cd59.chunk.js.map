{"version":3,"sources":["Header/header.js","TaskItem/TaskItem.js","NextWeek/NextWeek.js","ThisWeekH/ThisWeekH.js","AllTodo/AllTodo.js","AllTodoH/AllTodoH.js","Done/Done.js","DoneH/DoneH.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","date","Date","toDateString","useState","text","setText","dueDate","setDueDate","priority","setPriority","className","id","data-toggle","type","name","defaultChecked","placeholder","onChange","event","target","value","defaultValue","onClick","addTask","TaskItem","completed","completeTask","deleteTask","NextWeek","ThisWeekH","AllTodo","AllTodoH","Done","DoneH","Footer","href","App","uuidv4","tasks","setTasks","sort","a","b","today","first","getDate","getDay","lastday","setDate","dd","String","padStart","mm","getMonth","lastDayOfWeek","getFullYear","lastdayNW","ddNW","mmNW","lastDayOfWeekNW","twTasks","filter","task","nwTasks","allActiveTasks","doneTasks","updatedTasks","map","newTask","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0873cd59.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\n\nimport './Header.css';\n\nfunction Header(props) {\n\n    const date = new Date().toDateString();\n\n    //telling react that some text/date will be inputted and we need to keep track of and use that text/date.\n    //calling (\"\") as there may be nothing written in input TODO box yet\n    const [text, setText] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n    const [priority, setPriority] = useState(\"\");\n\n    //onChange is used so everytime the text input field changes react will update this STATE\n    function handleTextChange(event) {\n        setText(event.target.value);\n    }\n\n    function handleDateChange(event) {\n        setDueDate(event.target.value);\n    }\n\n    function handlePriority(event) {\n        setPriority(event.target.value);\n    }\n\n    function handleAddTaskClick() {\n        props.addTask(text, dueDate, priority);\n    }\n\n    \n    return (\n        <Fragment>\n            <header>\n\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div className=\"col-lg col-lg-5 header-toggle\" id=\"header\">\n\n                            <div className=\"row header-toggle__row\">\n                                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                                    <label className=\"btn btn-secondary toggler active\">\n                                        <input type=\"radio\" name=\"options\" id=\"option1\" /> All to'do's\n                                </label>\n                                    <label className=\"btn btn-secondary toggler\">\n                                        <input type=\"radio\" name=\"options\" id=\"option2\" />Next wk to-do's\n                                </label>\n                                    <label className=\"btn btn-secondary toggler\">\n                                        <input type=\"radio\" name=\"options\" id=\"option2\" defaultChecked />This wk to-do's\n                                </label>\n                                </div>\n                                <br></br>\n                            </div>\n                            <br></br>\n                            <div className=\"row-2\">\n                                <h1> Holly's Mega\n                            To-do List</h1><br></br>\n                            </div>\n\n                            <div className=\"row-date\">\n                                <h2><strong>{date}</strong></h2><br></br>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"col-lg col-lg-7\">\n                            <form className=\"new-todo-container\">\n                                <div className=\"row\">\n                                    <div className='col-12'>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control input-lg\"\n                                            placeholder=\"To do...\"\n                                            onChange={handleTextChange}\n                                            value={text} />\n                                    </div>\n                                </div><br></br>\n\n                                <div className=\"row\">\n                                    <div className=\"col-12 col-md-5\">\n                                        <input\n                                            id=\"due-date\"\n                                            type=\"date\"\n                                            className=\"form-control\"\n                                            placeholder=\"Due Date\"\n                                            onChange={handleDateChange}\n                                            value={dueDate} />\n                                    </div>\n                                </div>\n                                <br></br>\n                                <div className=\"row\">\n                                    <div className='col-12 col-md-5'>\n                                        <select \n                                        className=\"custom-select mr-sm-2\" \n                                        id=\"inlineFormCustomSelect\"\n                                        onChange={handlePriority}\n                                        value={priority}>\n                                            <option defaultValue>Priority...</option>\n                                            <option id=\"high\" value=\"high\">High</option>\n                                            <option id=\"medium\" value=\"medium\">Medium</option>\n                                            <option id=\"low\" value=\"low\">Low</option>\n                                        </select>\n                                    </div>\n\n                                </div><br></br>\n\n                                <div className=\"row\">\n                                    <div className='col-12 col-md-5 add-button__column'>\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-secondary btn-sm btn-block\"\n                                            onClick={handleAddTaskClick}\n                                        >Add to-do</button>\n                                    </div>\n                                </div>\n                            </form >\n\n                        </div>\n\n\n                    </div>\n                </div>\n            </header>\n        </Fragment>\n\n    );\n}\n\nexport default Header;","import React, { Fragment, useState } from 'react';\n//fragemnt is an invisable div\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n\n    function handleDoneClick() {\n        // console.log('The done button has been clicked!');\n        props.completeTask(props.id);\n    }\n\n    const [dueDate, setDueDate] = useState(\"\");\n\n    function handleDateChange(event) {\n        setDueDate(event.target.value);\n    }\n\n    return (\n        <div className={`task-item ${props.priority}`}>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8\">\n                    <p>{props.text}</p>\n                </div>\n                <div className=\"col-12 col-md-2 dateBox\">\n                    <input \n                    id=\"due-date\" \n                    type=\"date\" \n                    className=\"form-control\" \n                    defaultValue={props.dueDate}\n                    />\n                </div>\n                <div className=\"col-12 col-md-2 doneDeleteButtons\">\n                <button\n                        type=\"button\"\n                        className=\"btn btn-outline-dark\"\n                        onChange={handleDateChange}\n                        defaultValue={props.dueDate}\n                        > change date </button>\n                    {!props.completed &&\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-dark\"\n                            onClick={handleDoneClick}> done</button>}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={() => props.deleteTask(props.id)}> delete </button>\n                   \n                </div>\n            </div>\n        </div >\n\n    );\n}\n\nexport default TaskItem;\n\n","import React from 'react';\nimport './NextWeek.css';\n\nfunction NextWeek(props) {\n    return (\n        <div className={`task-item ${props.priority}`}>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8\">\n                    <p>{props.text}</p>\n                </div>\n                <div className=\"col-12 col-md-2 dateBox\">\n                    <input id=\"due-date\" type=\"date\" className=\"form-control\" defaultValue={props.dueDate} />\n                </div>\n                <div className=\"col-12 col-md-2 doneDeleteButtons\">\n                    <button \n                    type=\"button\" \n                    className=\"btn btn-outline-dark\"\n                    onClick={ () =>props.completeTask(props.id)}>done</button>\n                    <button \n                    type=\"button\" \n                    className=\"btn btn-outline-dark\"\n                    onClick={ () =>props.deleteTask(props.id)}>delete</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NextWeek;","import React from 'react';\nimport './ThisWeekH.css';\n\nfunction ThisWeekH() {\n\n    return (\n        \n        <h3>THIS WEEK's to-do's</h3>\n    );\n}\n\nexport default ThisWeekH;\n\n","import React from 'react';\nimport './AllTodo.css';\n\nfunction AllTodo(props) {\n    return (\n        \n        <div className={`task-item ${props.priority}`}>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8\">\n                    <p>{props.text}</p>   \n                </div>\n                <div className=\"col-12 col-md-2 dateBox\">\n                    <input id=\"due-date\" type=\"date\" className=\"form-control\" defaultValue={props.dueDate} />\n                </div>\n                <div className=\"col-12 col-md-2 doneDeleteButtons\">\n                <button \n                type=\"button\" \n                className=\"btn btn-outline-dark\"\n                onClick={ () =>props.completeTask(props.id)}>done</button>\n \n                <button \n                type=\"button\" \n                className=\"btn btn-outline-dark\"\n                onClick={ () =>props.deleteTask(props.id)}>delete</button>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default AllTodo;","import React from 'react';\n\n\nfunction AllTodoH() {\n    return (\n        \n        <h3>ALL FUTURE to-do's </h3>\n    );\n}\n\nexport default AllTodoH;","import React from 'react';\nimport './Done.css';\n\nfunction Done(props) {\n    return (\n\n        <div className=\"task-item done-item\">\n            <div className=\"row\">\n                <div className=\"col-9 col-md-10\">\n                    <div className={`done-item ${props.priority}`}>\n                        <p className=\"Done_text\">{props.text}</p>\n                    </div>\n                </div>\n                {/* <div className=\"col-4 col-md-3\">\n                    <div className={`done-item ${props.modifier}`}>\n                        <p className=\"Done_text\">{props.dueDate}</p>\n                    </div>\n                </div> */}\n                <div className=\"col-2 col-md-2 doneDeleteButtons\">\n                <button type=\"button\" className=\"btn btn-outline-dark\">undo</button>\n                <button\n                        type=\"button\"\n                        className=\"btn btn-outline-dark\"\n                        onClick={() => props.deleteTask(props.id)}> delete </button>\n                </div>  \n            </div>\n        </div >\n    );\n}\n\nexport default Done;","import React from 'react';\n\nfunction DoneH() {\n    return (  \n        <h3>ALL DONE! You smashed it!</h3>\n    );\n}\n\nexport default DoneH;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"text-center\">\n                <p><a href=\"#header\">\n                    Nip back to the top of the page</a></p>\n        </footer>\n\n    );\n}\n\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Header from \"./Header/header\"\nimport TaskItem from \"./TaskItem/TaskItem\"\nimport NextWeek from \"./NextWeek/NextWeek\"\nimport ThisWeekH from \"./ThisWeekH/ThisWeekH\"\nimport AllTodo from \"./AllTodo/AllTodo\"\nimport AllTodoH from \"./AllTodoH/AllTodoH\"\nimport Done from \"./Done/Done\"\nimport DoneH from \"./DoneH/DoneH\"\nimport Footer from \"./Footer/Footer\"\n\n\nfunction App() {\n  // const tasks = useState() []; //what is that state\n  // const setTasks =useState()[1]; //function allows me to update that state\n  //Destructuring method, first thing we will store\n\n  const [tasks, setTasks] = useState([\n    { text: \"Look up isBefore and momentjs.com\", completed: false, dueDate: \"2020-05-20\", priority: \"high\", id: uuidv4() },\n    { text: \"try and order you lists by date\", completed: false, dueDate: \"2020-05-20\", priority: \"high\", id: uuidv4() },\n    { text: \"Wash Alan\", completed: false, dueDate: \"2020-05-17\", priority: \"high\", id: uuidv4() },\n    { text: \"Find the cat\", completed: false, dueDate: \"2020-05-17\", priority: \"medium\", id: uuidv4() },\n    { text: \"Take a secret nap\", completed: false, dueDate: \"2020-05-24\", priority: \"low\", id: uuidv4() },\n    { text: \"Make a white Russian\", completed: true, dueDate: \"2020-05-01\", priority: \"doneColor\", id: uuidv4() },\n    { text: \"Feed children\", completed: true, dueDate: \"2020-06-07\", priority: \"doneColor\", id: uuidv4() },\n    { text: \"Shave little shorts into Jeffery the cat\", completed: false, dueDate: \"2020-07-07\", priority: \"low\", id: uuidv4() },\n    { text: \"Eat Cheese\", completed: true, dueDate: \"2020-06-07\", priority: \"doneColor\", id: uuidv4() },\n    { text: \"Remove and cut up the entire back garden hedge\", completed: true, dueDate: \"2020-06-07\", priority: \"doneColor\", id: uuidv4() },\n    { text: \"Get into bin\", completed: true, dueDate: \"2020-06-07\", priority: \"doneColor\", id: uuidv4() },\n    { text: \"Buy a reciprocal saw\", completed: false, dueDate: \"2020-04-29\", priority: \"medium\", id: uuidv4() },\n    { text: \"Paint woodwork\", completed: false, dueDate: \"2020-07-29\", priority: \"low\", id: uuidv4() }\n  ]);\n\n  //trying to get dates to be sorted in order has to be here else it does not sort the original state above.\n  tasks.sort(function(a,b){\n    return new Date(a.dueDate) - new Date(b.dueDate);\n  });\n\n  //making a variable that tells us the date of the last day of THIS week\n  let today = new Date(); //this is todays date and time\n  let first = today.getDate() - today.getDay() + 1; // First day is the day of the month - the day of the week\n  let last = first + 6; // last day is the first day + 6\n  let firstday = new Date(today.setDate(first));\n  let lastday = new Date(today.setDate(today.getDate() + 6));\n  let dd = String(lastday.getDate()).padStart(2, '0');\n  let mm = String(lastday.getMonth() + 1).padStart(2, '0'); //January is 0!\n  let yyyy = lastday.getFullYear();\n  let lastDayOfWeek = yyyy + \"-\" + mm + \"-\" + dd;\n\n  //making a variable to tell us the date of the last day of NEXT week\n  let lastdayNW = new Date(today.setDate(today.getDate() + 13));\n  let ddNW = String(lastdayNW.getDate()).padStart(2, '0');\n  let mmNW = String(lastdayNW.getMonth() + 1).padStart(2, '0');\n  let yyyyNW = lastdayNW.getFullYear();\n  let lastDayOfWeekNW = yyyyNW + \"-\" + mmNW + \"-\" + ddNW;\n\n\n  const twTasks = tasks.filter(task => !task.completed && task.dueDate <= lastDayOfWeek);\n  // this weeks tasks so looking at if NOT DONE and in a certain date range\n\n  const nwTasks = tasks.filter(task => !task.completed && task.dueDate > lastDayOfWeek\n    && task.dueDate <= lastDayOfWeekNW);\n  // this weeks tasks so looking at if NOT DONE and in a certain date range\n\n  const allActiveTasks = tasks.filter(task => !task.completed);\n  //look through array of ALLTASKS and if the task if false keep it\n\n  const doneTasks = tasks.filter(task => task.completed);\n\n  //function to delete a task\n  function deleteTask(id) {\n    //look through all tasks and find where task.id===id\n    //if it IS === remove that task\n    const updatedTasks = tasks.filter(task => task.id !== id); //if it return TRUE it keeps it, if false it removes it\n    //then update TASK STATE\n    setTasks(updatedTasks);\n  }\n\n  function completeTask(id) {\n    //look through all tasks and find where task.id===id, \n    //if it is change completed: true\n    //if it IS then add to updated task state\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.completed = true;\n      }\n      return task;\n    })\n\n    setTasks(updatedTasks);\n  }\n\n  function addTask(text, dueDate, priority) {\n    //get a copy of the tasks that are akready there\n    //add a new task into this array\n    //update the task state\n    const newTask = { \n      text: text, \n      completed: false, \n      dueDate: dueDate, \n      priority: priority, \n      id: uuidv4() \n    }\n    //using a spread syntax to go through wach task and the new tasks\n    const updatedTasks = [...tasks, newTask]\n    setTasks(updatedTasks);\n  }\n\n  \n\n\n\n \n  return (\n    <div className=\"Container\">\n      <div className=\"App\">\n        <Header addTask={ addTask }/>\n        <br></br>\n        <ThisWeekH />\n        <div>\n          {twTasks.map((tasks) => {\n            return <TaskItem\n              deleteTask={deleteTask}\n              completeTask={completeTask}\n              key={tasks.text}\n              text={tasks.text}\n              dueDate={tasks.dueDate}\n              completed={tasks.completed}\n              priority={tasks.priority}\n              id={tasks.id} />\n          })}\n        </div>\n        <br></br>\n        <br></br>\n        <h3>NEXT WEEK's to-do's</h3>\n        <div>\n          {nwTasks.map((tasks) => {\n            return <NextWeek\n              deleteTask={deleteTask}\n              completeTask={completeTask}\n              key={tasks.text}\n              text={tasks.text}\n              dueDate={tasks.dueDate}\n              completed={tasks.completed}\n              priority={tasks.priority}\n              id={tasks.id} />\n          })}\n        </div>\n        <br></br>\n        <br></br>\n        <AllTodoH />\n        {allActiveTasks.map((tasks) => {\n          return <AllTodo\n            deleteTask={deleteTask}\n            completeTask={completeTask}\n            key={tasks.text}\n            text={tasks.text}\n            dueDate={tasks.dueDate}\n            completed={tasks.completed}\n            priority={tasks.priority}\n            id={tasks.id} />\n        })}\n        <div>\n        </div>\n        <br></br>\n        <br></br>\n        <DoneH />\n        <div>\n          {doneTasks.map((tasks) => {\n            return <Done\n              deleteTask={deleteTask}\n              key={tasks.text}\n              text={tasks.text}\n              completed={tasks.completed}\n              priority={tasks.priority}\n              id={tasks.id} />\n          })}\n        </div>\n        <br></br>\n        <br></br>\n        <Footer />\n      </div>\n    </div>\n\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}